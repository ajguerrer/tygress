/* automatically generated by rust-bindgen 0.69.2 */

pub const IF_NAMESIZE: u32 = 16;
pub const SIOCGIFMTU: u32 = 35105;
pub const SIOCGIFINDEX: u32 = 35123;
pub const ETH_P_ARP: u32 = 2054;
pub const IFF_TUN: u32 = 1;
pub const IFF_TAP: u32 = 2;
pub const IFF_NO_PI: u32 = 4096;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type socklen_t = __socklen_t;
pub type sa_family_t = ::std::os::raw::c_ushort;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sockaddr {
    pub sa_family: sa_family_t,
    pub sa_data: [::std::os::raw::c_char; 14usize],
}
extern "C" {
    pub fn bind(
        __fd: ::std::os::raw::c_int,
        __addr: *const sockaddr,
        __len: socklen_t,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ifmap {
    pub mem_start: ::std::os::raw::c_ulong,
    pub mem_end: ::std::os::raw::c_ulong,
    pub base_addr: ::std::os::raw::c_ushort,
    pub irq: ::std::os::raw::c_uchar,
    pub dma: ::std::os::raw::c_uchar,
    pub port: ::std::os::raw::c_uchar,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ifreq {
    pub ifr_ifrn: ifreq__bindgen_ty_1,
    pub ifr_ifru: ifreq__bindgen_ty_2,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union ifreq__bindgen_ty_1 {
    pub ifrn_name: [::std::os::raw::c_char; 16usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union ifreq__bindgen_ty_2 {
    pub ifru_addr: sockaddr,
    pub ifru_dstaddr: sockaddr,
    pub ifru_broadaddr: sockaddr,
    pub ifru_netmask: sockaddr,
    pub ifru_hwaddr: sockaddr,
    pub ifru_flags: ::std::os::raw::c_short,
    pub ifru_ivalue: ::std::os::raw::c_int,
    pub ifru_mtu: ::std::os::raw::c_int,
    pub ifru_map: ifmap,
    pub ifru_slave: [::std::os::raw::c_char; 16usize],
    pub ifru_newname: [::std::os::raw::c_char; 16usize],
    pub ifru_data: __caddr_t,
}
extern "C" {
    pub fn ioctl(
        __fd: ::std::os::raw::c_int,
        __request: ::std::os::raw::c_ulong,
        ...
    ) -> ::std::os::raw::c_int;
}
pub type __u16 = ::std::os::raw::c_ushort;
pub type __be16 = __u16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sockaddr_ll {
    pub sll_family: ::std::os::raw::c_ushort,
    pub sll_protocol: __be16,
    pub sll_ifindex: ::std::os::raw::c_int,
    pub sll_hatype: ::std::os::raw::c_ushort,
    pub sll_pkttype: ::std::os::raw::c_uchar,
    pub sll_halen: ::std::os::raw::c_uchar,
    pub sll_addr: [::std::os::raw::c_uchar; 8usize],
}
